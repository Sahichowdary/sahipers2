resource "aws_cloudfront_distribution" "cdnpocjava" {
  origin {
    domain_name              = 
    origin_access_control_id = aws_cloudfront_origin_access_control.default.id
    origin_id                = origin1
    custom_origin_config {
       http_port = 80
       https_port = 443
       origin_protocol_policy = "https-only"
       origin_ssl_protocol = ["TLSv1.2"]
       origin_keeplive_timeout = 30
       origin_read_timeout = 30
    }
  }

  enabled             = true
  is_ipv6_enabled     = true
  comment             = "Some comment"
  default_root_object = "index.html"

  logging_config {
    include_cookies = false
    bucket          = "mylogs.s3.amazonaws.com"
    prefix          = "myprefix"
    
  web_acl_id = aws_waf_web_acl.saskint_acl.id

  }
  #aliases = ["mysite.example.com", "yoursite.example.com"]

  default_cache_behavior {
    allowed_methods  = ["DELETE", "GET", "HEAD", "OPTIONS", "PATCH", "POST", "PUT"]
    cached_methods   = ["GET", "HEAD"]
    target_origin_id = var.loadbalancer_id

    forwarded_values {
      query_string = false

      cookies {
        forward = "none"
      }
    }

    viewer_protocol_policy = "allow-all"
    min_ttl                = 0
    default_ttl            = 3600
    max_ttl                = 86400
  }

  # Cache behavior with precedence 0
  ordered_cache_behavior {
    path_pattern     = "/content/immutable/*"
    allowed_methods  = ["GET", "HEAD", "OPTIONS"]
    cached_methods   = ["GET", "HEAD", "OPTIONS"]
    target_origin_id = local.s3_origin_id

    forwarded_values {
      query_string = false
      headers      = ["Origin"]

      cookies {
        forward = "none"
      }
    }

    min_ttl                = 0
    default_ttl            = 86400
    max_ttl                = 31536000
    compress               = true
    viewer_protocol_policy = "redirect-to-https"
  }

  price_class = "PriceClass_200"

  restrictions {
    geo_restriction {
      restriction_type = "whitelist"
      locations        = "US"
    }
  }

  viewer_certificate {
    cloudfront_default_certificate = true
  }


  tags = {
    Environment = "test"
  }

} 
